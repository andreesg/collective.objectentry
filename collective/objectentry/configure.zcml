<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:five="http://namespaces.zope.org/five"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    xmlns:grok="http://namespaces.zope.org/grok"
    xmlns:plone="http://namespaces.plone.org/plone"
    i18n_domain="collective.objectentry">

  <!-- Include configuration for dependencies listed in setup.py -->
  
  <includeDependencies package="." />

  <!-- Grok the package to initialize schema interfaces and content classes -->
  <grok:grok package="." />

  <!-- Register a resource directory from which we can deploy static
   resource files. -->
  <browser:resourceDirectory
    name="collective.objectentry"
    directory="resources" />

  <i18n:registerTranslations directory="locales" />

  <!-- Register an extension profile to make the product installable
       in Plone -->
  <genericsetup:registerProfile
      name="default"
      title="Object entry"
      directory="profiles/default"
      description="Information about an object entry"
      provides="Products.GenericSetup.interfaces.EXTENSION"
      />
    
  <browser:page
        name="contents_view"
        for="collective.objectentry.objectentry.IObjectEntry"
        class="collective.objectentry.objectentry.ObjectEntryView"
        template="objectentry_templates/view.pt"
        permission="zope2.View"
        title="View Content"
        menu="plone_displayviews"
        />

  <!-- Custom Edit form -->
  <browser:page
    name="edit"
    for="collective.objectentry.objectentry.IObjectEntry"
    class="collective.objectentry.objectentry.EditForm"
    permission="cmf.ModifyPortalContent"
    />

  <!-- Custom Add form -->
  <adapter
    for="Products.CMFCore.interfaces.IFolderish
         zope.publisher.interfaces.browser.IDefaultBrowserLayer
         plone.dexterity.interfaces.IDexterityFTI"
    provides="zope.publisher.interfaces.browser.IBrowserPage"
    factory=".objectentry.AddView"
    name="collective.objectentry.objectentry"
  />
  
  <class class=".objectentry.AddForm">
    <require
        permission="cmf.AddPortalContent"
        interface="zope.publisher.interfaces.browser.IBrowserPage"
        />
  </class>

  <!-- Custom plone form widget -->
  <browser:page
    name="ploneform-render-widget"
    for=".objectentry.IFormWidget"
    class="plone.app.z3cform.templates.RenderWidget"
    permission="zope.Public"
    template="objectentry_templates/widget.pt"
  />

  <!-- Custom Add and Edit form macro -->
  <browser:page
      for="*"
      name="collective.objectentry.fieldsetmacro"
      template="objectentry_templates/fieldsetmacro.pt"
      permission="zope.Public"
    />

  <adapter for=".objectentry.IObjectEntry"
    provides=".objectentry.INameFromTransportNumber"
    factory=".objectentry.NameFromTransportNumber"
    />

  <adapter name="templateForObjectData_creator_productionPlace" factory=".utils.indexers.templateForObjectData_creator_productionPlace" />
  <adapter name="listWithLinkedObjects_linkedObjects_curr" factory=".utils.indexers.listWithLinkedObjects_linkedObjects_curr" />
  

  <!-- -*- extra stuff goes here -*- -->
  <utility
    component=".utils.vocabularies.TransportMethodVocabularyFactory"
    name="collective.objectentry.transportmethod"
    />

    <utility
    component=".utils.vocabularies.ReasonVocabularyFactory"
    name="collective.objectentry.reason"
    />

    <utility
    component=".utils.vocabularies.ObjectnameVocabularyFactory"
    name="collective.objectentry.objectname"
    />

    <utility
    component=".utils.vocabularies.ProductionPlaceVocabularyFactory"
    name="collective.objectentry.productionPlace"
    />

     <utility
    component=".utils.vocabularies.MaterialVocabularyFactory"
    name="collective.objectentry.material"
    />

    <utility
    component=".utils.vocabularies.TechniqueVocabularyFactory"
    name="collective.objectentry.technique"
    />

    <utility
    component=".utils.vocabularies.LocationVocabularyFactory"
    name="collective.objectentry.location"
    />

    <utility
    component=".utils.vocabularies.CurrencyVocabularyFactory"
    name="collective.objectentry.currency"
    />

</configure>
